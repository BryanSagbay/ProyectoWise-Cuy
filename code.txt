import cv2
import rclpy
from rclpy.node import Node
from sensor_msgs.msg import Image
from cv_bridge import CvBridge

class CameraPublisher(Node):
    def __init__(self):
        super().__init__('camera_publisher')

        # Crear un publicador para el tópico "camera_frames"
        self.publisher_ = self.create_publisher(Image, 'camera_frames', 10)
        self.timer = self.create_timer(0.1, self.timer_callback)  # Publicar a 10 FPS
        self.bridge = CvBridge()

        # Abrir la cámara
        self.cap = cv2.VideoCapture(0)
        if not self.cap.isOpened():
            self.get_logger().error('No se puede acceder a la cámara')
            raise RuntimeError('No se puede acceder a la cámara')

        # Crear la ventana una vez
        cv2.namedWindow('Vista de la cámara', cv2.WINDOW_NORMAL)

        self.get_logger().info('Nodo de cámara iniciado. Publicando frames en /camera_frames')

    def timer_callback(self):
        ret, frame = self.cap.read()
        if not ret:
            self.get_logger().warn('No se pudo capturar el frame')
            return

        # Mostrar el frame en la ventana existente
        cv2.imshow('Vista de la cámara', frame)

        # Convertir frame de OpenCV a mensaje ROS2
        msg = self.bridge.cv2_to_imgmsg(frame, encoding='bgr8')
        self.publisher_.publish(msg)
        self.get_logger().info('Publicando frame...')

        # Salir si se presiona 'q'
        if cv2.waitKey(1) & 0xFF == ord('q'):
            self.get_logger().info('Cerrando nodo de cámara...')
            rclpy.shutdown()

    def destroy_node(self):
        # Liberar la cámara y cerrar la ventana al destruir el nodo
        self.cap.release()
        cv2.destroyWindow('Vista de la cámara')
        super().destroy_node()

def main(args=None):
    rclpy.init(args=args)
    node = CameraPublisher()

    try:
        rclpy.spin(node)
    except KeyboardInterrupt:
        pass
    finally:
        node.destroy_node()
        rclpy.shutdown()

if __name__ == '__main__':
    main()

sudo apt update
sudo apt install -y libgtk2.0-dev libgtk-3-dev libcanberra-gtk* libx11-dev
